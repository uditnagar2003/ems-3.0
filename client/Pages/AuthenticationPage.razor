@page "/"
@inject AuthenticationStateProvider AuthStateProvider
@*@inject NavigationManager NavManager*@
@code{
    [CascadingParameter] public Task<AuthenticationState> AuthenticationState { get; set; }
    protected async override Task OnInitializedAsync()
    {
        Console.WriteLine("this Authentication page");
        var user = (await AuthenticationState).User;
        Console.WriteLine("this Authentication page" + user.Identity.IsAuthenticated);
        if (user.Identity!.IsAuthenticated)
        {
            /*var logoutModel = new UserSession();
            var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(logoutModel);
            */
            NavManager.NavigateTo/*("/identity/account/login");*/("/home/dashboard");
        }
        else
            NavManager.NavigateTo("/identity/account/login");
    }
}