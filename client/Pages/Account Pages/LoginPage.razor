@page "/identity/account/login"
@using Syncfusion.Blazor.Popups
@layout AuthenticationLayout
@inject SfDialogService DialogService 
<div class="container">
    <div class="row">
        <div class="col-lg-4"></div>
        <div class="col-lg-4">
            
            <EditForm Enhance Model="User" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator/>
                
                <div class="card bg-dark" style="opacity:0.8; margin-top:50%; border-radius:10px; color:white;font-weight:bold">
                    <div class="card-header text-center fs-5 mb-2">Login</div>
                    <div class="container">
                        <div class="row">
                            <div class="col-lg-4 col-md-4 col-sm-4"></div>
                            <div class="col-lg-4 col-md-4 col-sm-4 d-flex justify-content-center">
                                <img style="border-radius:20px" src="/images/logo/logo.png" height="50" width="50"/>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="form-group mt-3">
                            <label class="form-label">Email</label>
                            <InputText @bind-Value="User.EmailAddress" class="form-control"></InputText>
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Password</label>
                            <input type="password" @bind="User.Password" class="form-control"/>
                        </div>
                        <div class="form-group mt-3">
                            @if (ShowButtonSpinner)
                            {
                                <button class=" btn btn-primary float-end" type="button" disabled>
                                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                    Processing...
                                </button>
                            }
                            else
                            {
                                <button class="btn btn-outline-primary float-end" type="submit">Login</button>
                            }
                        </div>
                    </div>
                    <div class="card-footer">
                        <span class="text-center">
                            Don't have an Account?
                            <a class="btn-link" href="identity/account/register">Sign Up</a>
                        </span>
                        <ValidationSummary/>
                    </div>
                </div>
            </EditForm>
        </div>
        <div class="col-lg-4"></div>
    </div>
</div>
@code
{
    public bool ShowButtonSpinner { get; set; } = false;
    Login User = new Login();
    [CascadingParameter] public Task<AuthenticationState> AuthenticationState { get; set; }
    protected async override Task OnInitializedAsync()
    {
        await UserAuthentication();
    }
    async Task HandleLogin()
    {
        ShowButtonSpinner = true;
        var result = await accountService.SignInAsync(User);
        if(result.Flag)
        {
           await DisplayDialog1(result.Message,"Login Success");
           var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
           await customAuthStateProvider.UpdateAuthenticationState(new UserSession() { Token = result.Token, RefreshToken = result.RefreshToken });
            NavManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
            await DisplayDialog1(result.Message, "Login Failed");
        }
        ShowButtonSpinner = false;

    }
    private async Task DisplayDialog1(string content, string title)
    {
       
        await DialogService.AlertAsync(content, title);
        
    }
    private async Task UserAuthentication()
    {
        var user = (await AuthenticationState).User;
        bool isUserAuthenticated = user.Identity!.IsAuthenticated;
        if (isUserAuthenticated)
            NavManager.NavigateTo("/home/dashboard");
    }
 


}